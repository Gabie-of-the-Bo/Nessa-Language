unary postfix op "++" (5000);

op (n: &&Int) ++ -> &&Int {
    n.inc();
    return n;
}

fn gcd(a: Int, b: Int) -> Int {
    while b != 0 {
        let r = a % b;
        a := *b;
        b := move(r);
    }

    return *a;
}

fn lcm(a: Int, b: Int) -> Int {
    let n = a * b;
    
    return n / gcd(*a, *b);
}

fn coprime(a: Int, b: Int) -> Bool {
    return gcd(move(a), move(b)) == 1;
}

fn droot(n: Int) -> Int {
    if n < 10 {
        return move(n);
    
    } else {
        let res = 0;

        while n > 0 {
            let last_digit = n % 10;
            res = res + last_digit;
            n := n - last_digit;
            n := n / 10;
        }

        return droot(move(res));
    }
}